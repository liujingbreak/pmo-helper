{"version":3,"sources":["wifi-mgr.ts"],"names":[],"mappings":"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","file":"wifi-mgr.js","sourcesContent":["import {CronJob} from 'cron';\nimport {spawn} from '@wfh/plink/wfh/dist/process-utils';\nimport axios from 'axios';\nimport chalk from 'chalk';\nimport {switchMap} from 'rxjs/operators';\nimport {from, timer} from 'rxjs';\nimport axiosob from 'axios-observable';\n// import log4js from 'log4js';\n\n/**\n * https://www.easycron.com/faq/What-cron-expression-does-easycron-support\n * \n */\nexport function turnOff() {\n  const sec = Math.ceil(Math.random() * 60);\n  let min = 50 + Math.ceil(Math.random() * 15);\n  let hour = 19;\n  if (min >= 60) {\n    min = min - 60;\n    hour++;\n  }\n\n  const startSec = Math.ceil(Math.random() * 60);\n  let startMin = 55 + Math.ceil(Math.random() * 5);\n  let startHour = 9;\n  if (startMin >= 60) {\n    startMin = startMin - 60;\n    startHour++;\n  }\n\n  // tslint:disable-next-line: no-console\n  console.log(`Will turn off at ${hour}:${min}:${sec} and\\n` +\n  `Turn on at ${chalk.cyan(startHour + '')}:${startMin}:${startSec}`);\n  new CronJob(`${sec} ${min} ${hour} * * 1,2,3,4,5`, () => {\n    // tslint:disable-next-line: no-console\n    console.log('Turning off');\n    spawn('networksetup', '-setnetworkserviceenabled', 'Wi-Fi', 'off');\n  }).start();\n\n  new CronJob(`${startSec} ${startMin} ${startHour} * * 1,2,3,4,5`, async () => {\n    // tslint:disable-next-line: no-console\n    console.log('Turning on');\n    await spawn('networksetup', '-setnetworkserviceenabled', 'Wi-Fi', 'on').promise;\n    await new Promise(resolve => setTimeout(resolve, 15000));\n    axios.get('https://www.baidu.com');\n  }).start();\n}\n\nexport function turnOn() {\n  spawn('networksetup', '-setnetworkserviceenabled', 'Wi-Fi', 'on');\n}\n\nexport function checkCreditApplServer() {\n  timer(0, 30 * 60000).pipe(\n    switchMap(() => axiosob.get<string>('https://credit-service.bkjk.com/byj.githash-webui.txt')),\n    switchMap(res => {\n      console.log(res.data);\n      console.log(chalk.green(new Date().toLocaleTimeString()));\n      return from(Promise.resolve())\n    })\n  )\n  .subscribe();\n}\n\nexport function createCmd() {\n\n}\n"]}