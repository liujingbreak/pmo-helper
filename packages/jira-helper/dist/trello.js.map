{"version":3,"sources":["trello.ts"],"names":[],"mappings":"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","file":"trello.js","sourcesContent":["// tslint:disable no-console\n\nimport {from, of, forkJoin, Observable} from 'rxjs';\nimport {Page} from 'puppeteer-core';\nimport * as tr from './trello';\nimport {mergeMap, map, reduce} from 'rxjs/operators';\nimport * as jsYaml from 'js-yaml';\nimport {launch, waitForVisible} from './puppeteer';\nimport {Issue} from './jira';\nimport axios, {AxiosResponse} from 'axios';\n\nconst log = require('log4js').getLogger('jira-helper');\n\nconst API_TOKEN = '38cfe637eacbbcf7bbd90b9ee83f31113d04b4d34fd79f13a5fe51608ba88028';\nconst API_KEY = '1846faaab21515d5bab05dec2fbda8bc';\n\nexport interface TrelloColumn {\n  name: string;\n  id?: string;\n  cards: TrelloCard[];\n}\n\nexport interface TrelloCard {\n  title: string;\n  shortId: string;\n  id?: string;\n}\n\ninterface TrelloApiCard {\n  id: string;\n  name: string;\n  badges?: any[];\n  labels?: any[];\n}\n\nexport async function listTrello() {\n  const browser = await launch(false);\n\n  const pages = await browser.pages();\n  // const page = await browser.newPage();\n  console.time('get page');\n  // tslint:disable-next-line: max-line-length\n  const url = 'https://trello.com/b/i6yaHbFX';\n  log.info('GET ' + url);\n\n  await pages[0].goto(url, {timeout: 0, waitUntil: 'networkidle2'});\n  console.log('fetching trello done');\n  console.timeEnd('get page');\n  const columns = await listColumn(pages[0]);\n  console.log(jsYaml.safeDump(columns));\n  await browser.close();\n  console.log('Have a nice day');\n}\n\nasync function listColumn(page: Page): Promise<tr.TrelloColumn[]> {\n  await page.waitFor('#board', {visible: true});\n  const columns = await page.$$('#board > .list-wrapper > .list');\n\n  return of(...columns).pipe(\n    mergeMap(columnEl => {\n      return forkJoin(\n        from(columnEl.$('.list-header h2')).pipe(\n          mergeMap(bdTitle => from(bdTitle!.getProperty('innerText'))),\n          mergeMap(value => from(value.jsonValue() as Promise<string>))\n        ),\n        from(columnEl.$$('.list-card .list-card-title')).pipe(\n          mergeMap(cards => from(cards)),\n          mergeMap(card => {\n            return forkJoin(\n              from(card.$('.card-short-id')).pipe(\n                mergeMap(id => id!.getProperty('innerText')),\n                mergeMap(jh => from(jh.jsonValue()) as Observable<string>)\n              ),\n              from(card.getProperty('innerText')).pipe(\n                mergeMap(jh => from(jh.jsonValue()) as Observable<string>)\n              ));\n          }),\n          map(([shortId, title]) => ({title, shortId} as tr.TrelloCard)),\n          reduce<tr.TrelloCard>((cards, card)=> {\n            cards.push(card);\n            return cards;\n          }, [])\n        )\n      );\n    }),\n    map(([name, cards]) => {\n      // log.info(` [ ${name} ] `);\n      // log.info(cards.map(card => `  - ${card.shortId}: ${card.title}`).join('\\n'));\n      return {name, cards} as tr.TrelloColumn;\n    }),\n    reduce<tr.TrelloColumn>((columns, bd) => {\n      columns.push(bd);\n      return columns;\n    }, [])\n  ).toPromise();\n}\n\nasync function syncFromJira(page: Page, issues: Issue[]) {\n  const columns = await page.$$('#board > .list-wrapper > .list');\n  const colNames: string[] = (await Promise.all(columns.map(async col => (await\n    (await col.$('.list-header h2'))!.getProperty('innerText')\n    ).jsonValue()) as any[]\n  ));\n\n  const colNameSet = new Set(colNames.map(name => /^([\\S]+)/.exec(name)![1])); // get space separated prefix\n  console.log('existing column for projects:\\n', Array.from(colNameSet.values()).join('\\n'));\n\n  for (const issue of issues) {\n    const colName = issue.id.slice(0, issue.id.indexOf('-'));\n    if (!colNameSet.has(colName)) {\n      await createColumn(page, colName);\n    }\n  }\n}\n\nexport async function test() {\n  const browser = await launch(false);\n  const page = (await browser.pages())[0];\n  await page.goto(\n    // tslint:disable-next-line: max-line-length\n    'https://trello.com/b/i6yaHbFX',\n    {waitUntil: 'networkidle2', timeout: 120000});\n  // await createColumn(page);\n  await syncFromJira(page, [{\n    id: 'BCL-TEST',\n    name: 'test issue',\n    status: '',\n    ver: ['abc'],\n    assignee: 'superman'\n  }]);\n}\nasync function createColumn(page: Page, name: string) {\n  const column = await page.$('#board > .js-add-list');\n  if (column == null)\n    throw new Error('Add column button is not found');\n  await page.waitForSelector('#board > .js-add-list a.open-add-list', {visible: true});\n  await (await column.$('a.open-add-list'))!.click();\n  await page.waitFor(400);\n  await (await column.$('input[type=text]'))!.type(name, {delay: 150});\n  const button = await column.$('input.js-save-edit');\n  await button!.click();\n  await waitForVisible(button!, false);\n  console.log('Column %s added', name);\n}\n\nexport async function apiTest() {\n  const res = await axios.get('https://api.trello.com/1/members/me/boards', {\n    params: {\n      key: API_KEY,\n      token: API_TOKEN\n    }});\n  console.log(res.data);\n}\n\nexport async function apiGetList(boardId = '5acdbf6678087812e8838ec4') {\n  const res = await axios.get<TrelloColumn[]>(`https://api.trello.com/1/boards/${boardId}/lists`, {params: {\n    key: API_KEY,\n    token: API_TOKEN\n  }});\n  const list = res.data;\n  const obs = list\n  .map(list => from(axios.get<TrelloApiCard[]>(`https://api.trello.com/1/lists/${list.id}/cards`)));\n\n  await forkJoin<AxiosResponse<TrelloApiCard[]>>(...obs).pipe(\n    map(responses => {\n      for (let i = 0, l = responses.length; i < l; i++) {\n        // console.log(responses[i].data);\n        // res.data[i].cards = responses[i].data;\n        log.info('%s Number of cards', list[i].name, l);\n      }\n      console.log(responses[0].data[0]);\n    })\n  ).toPromise();\n}\n\n"]}